{"ast":null,"code":"var _jsxFileName = \"C:\\\\Baocao\\\\english-quiz-app\\\\client\\\\src\\\\components\\\\Quiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Paper, Typography, TextField, Button, LinearProgress, makeStyles } from '@material-ui/core';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4)\n  },\n  paper: {\n    padding: theme.spacing(3)\n  },\n  question: {\n    marginBottom: theme.spacing(3)\n  },\n  answer: {\n    marginBottom: theme.spacing(2)\n  },\n  progress: {\n    marginBottom: theme.spacing(3)\n  },\n  timer: {\n    marginBottom: theme.spacing(2),\n    color: theme.palette.primary.main\n  }\n}));\n\n// Mock data - sau này sẽ lấy từ API\nconst mockQuestions = [{\n  id: 1,\n  text: \"The students _____ in the classroom right now.\",\n  blanks: [{\n    id: 1,\n    correctAnswer: \"are studying\"\n  }],\n  difficulty: \"easy\",\n  points: 1\n}, {\n  id: 2,\n  text: \"If I _____ rich, I _____ travel around the world.\",\n  blanks: [{\n    id: 1,\n    correctAnswer: \"were\"\n  }, {\n    id: 2,\n    correctAnswer: \"would\"\n  }],\n  difficulty: \"medium\",\n  points: 2\n}, {\n  id: 3,\n  text: \"She _____ to Paris three times _____ 2019.\",\n  blanks: [{\n    id: 1,\n    correctAnswer: \"has been\"\n  }, {\n    id: 2,\n    correctAnswer: \"since\"\n  }],\n  difficulty: \"hard\",\n  points: 3\n}];\nconst Quiz = () => {\n  _s();\n  const classes = useStyles();\n  const {\n    id\n  } = useParams();\n  const history = useHistory();\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [answers, setAnswers] = useState({});\n  const [timeLeft, setTimeLeft] = useState(30 * 60); // 30 minutes in seconds\n\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setTimeLeft(prevTime => {\n        if (prevTime <= 1) {\n          clearInterval(timer);\n          handleSubmit();\n          return 0;\n        }\n        return prevTime - 1;\n      });\n    }, 1000);\n    return () => clearInterval(timer);\n  }, []);\n  const handleAnswerChange = (questionId, blankId, value) => {\n    setAnswers(prev => ({\n      ...prev,\n      [questionId]: {\n        ...prev[questionId],\n        [blankId]: value\n      }\n    }));\n  };\n  const handleNext = () => {\n    if (currentQuestion < mockQuestions.length - 1) {\n      setCurrentQuestion(prev => prev + 1);\n    }\n  };\n  const handlePrevious = () => {\n    if (currentQuestion > 0) {\n      setCurrentQuestion(prev => prev - 1);\n    }\n  };\n  const handleSubmit = () => {\n    // Tính điểm và chuyển đến trang kết quả\n    const results = {\n      questions: mockQuestions,\n      answers: answers,\n      timeSpent: 1800 - timeLeft // Thời gian làm bài (giây)\n    };\n    history.push('/result', {\n      results\n    });\n  };\n  const formatTime = seconds => {\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = seconds % 60;\n    return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`;\n  };\n  const question = mockQuestions[currentQuestion];\n  const progress = (currentQuestion + 1) / mockQuestions.length * 100;\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: classes.container,\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.paper,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        className: classes.question,\n        children: question.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }, this), question.blanks.map(blank => /*#__PURE__*/_jsxDEV(TextField, {\n        label: `Blank ${blank.id}`,\n        value: answers[question.id] ? answers[question.id][blank.id] : '',\n        onChange: e => handleAnswerChange(question.id, blank.id, e.target.value),\n        className: classes.answer\n      }, blank.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(LinearProgress, {\n        variant: \"determinate\",\n        value: progress,\n        className: classes.progress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        className: classes.timer,\n        children: [\"Time left: \", formatTime(timeLeft)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handlePrevious,\n        disabled: currentQuestion === 0,\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleNext,\n        disabled: currentQuestion === mockQuestions.length - 1,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 9\n  }, this);\n};\n_s(Quiz, \"NN4UWyIv5T1MOFGXoTVDtGguXRQ=\", false, function () {\n  return [useStyles, useParams, useHistory];\n});\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","useEffect","Container","Paper","Typography","TextField","Button","LinearProgress","makeStyles","useParams","useHistory","jsxDEV","_jsxDEV","useStyles","theme","container","paddingTop","spacing","paddingBottom","paper","padding","question","marginBottom","answer","progress","timer","color","palette","primary","main","mockQuestions","id","text","blanks","correctAnswer","difficulty","points","Quiz","_s","classes","history","currentQuestion","setCurrentQuestion","answers","setAnswers","timeLeft","setTimeLeft","setInterval","prevTime","clearInterval","handleSubmit","handleAnswerChange","questionId","blankId","value","prev","handleNext","length","handlePrevious","results","questions","timeSpent","push","formatTime","seconds","minutes","Math","floor","remainingSeconds","toString","padStart","className","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","map","blank","label","onChange","e","target","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Baocao/english-quiz-app/client/src/components/Quiz.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { \r\n    Container, \r\n    Paper, \r\n    Typography, \r\n    TextField, \r\n    Button, \r\n    LinearProgress,\r\n    makeStyles \r\n} from '@material-ui/core';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        paddingTop: theme.spacing(4),\r\n        paddingBottom: theme.spacing(4),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(3),\r\n    },\r\n    question: {\r\n        marginBottom: theme.spacing(3),\r\n    },\r\n    answer: {\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    progress: {\r\n        marginBottom: theme.spacing(3),\r\n    },\r\n    timer: {\r\n        marginBottom: theme.spacing(2),\r\n        color: theme.palette.primary.main,\r\n    }\r\n}));\r\n\r\n// Mock data - sau này sẽ lấy từ API\r\nconst mockQuestions = [\r\n    {\r\n        id: 1,\r\n        text: \"The students _____ in the classroom right now.\",\r\n        blanks: [\r\n            {\r\n                id: 1,\r\n                correctAnswer: \"are studying\"\r\n            }\r\n        ],\r\n        difficulty: \"easy\",\r\n        points: 1\r\n    },\r\n    {\r\n        id: 2,\r\n        text: \"If I _____ rich, I _____ travel around the world.\",\r\n        blanks: [\r\n            {\r\n                id: 1,\r\n                correctAnswer: \"were\"\r\n            },\r\n            {\r\n                id: 2,\r\n                correctAnswer: \"would\"\r\n            }\r\n        ],\r\n        difficulty: \"medium\",\r\n        points: 2\r\n    },\r\n    {\r\n        id: 3,\r\n        text: \"She _____ to Paris three times _____ 2019.\",\r\n        blanks: [\r\n            {\r\n                id: 1,\r\n                correctAnswer: \"has been\"\r\n            },\r\n            {\r\n                id: 2,\r\n                correctAnswer: \"since\"\r\n            }\r\n        ],\r\n        difficulty: \"hard\",\r\n        points: 3\r\n    }\r\n];\r\n\r\nconst Quiz = () => {\r\n    const classes = useStyles();\r\n    const { id } = useParams();\r\n    const history = useHistory();\r\n    const [currentQuestion, setCurrentQuestion] = useState(0);\r\n    const [answers, setAnswers] = useState({});\r\n    const [timeLeft, setTimeLeft] = useState(30 * 60); // 30 minutes in seconds\r\n\r\n    useEffect(() => {\r\n        const timer = setInterval(() => {\r\n            setTimeLeft((prevTime) => {\r\n                if (prevTime <= 1) {\r\n                    clearInterval(timer);\r\n                    handleSubmit();\r\n                    return 0;\r\n                }\r\n                return prevTime - 1;\r\n            });\r\n        }, 1000);\r\n\r\n        return () => clearInterval(timer);\r\n    }, []);\r\n\r\n    const handleAnswerChange = (questionId, blankId, value) => {\r\n        setAnswers(prev => ({\r\n            ...prev,\r\n            [questionId]: {\r\n                ...prev[questionId],\r\n                [blankId]: value\r\n            }\r\n        }));\r\n    };\r\n\r\n    const handleNext = () => {\r\n        if (currentQuestion < mockQuestions.length - 1) {\r\n            setCurrentQuestion(prev => prev + 1);\r\n        }\r\n    };\r\n\r\n    const handlePrevious = () => {\r\n        if (currentQuestion > 0) {\r\n            setCurrentQuestion(prev => prev - 1);\r\n        }\r\n    };\r\n\r\n    const handleSubmit = () => {\r\n        // Tính điểm và chuyển đến trang kết quả\r\n        const results = {\r\n            questions: mockQuestions,\r\n            answers: answers,\r\n            timeSpent: 1800 - timeLeft // Thời gian làm bài (giây)\r\n        };\r\n        history.push('/result', { results });\r\n    };\r\n\r\n    const formatTime = (seconds) => {\r\n        const minutes = Math.floor(seconds / 60);\r\n        const remainingSeconds = seconds % 60;\r\n        return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`;\r\n    };\r\n\r\n    const question = mockQuestions[currentQuestion];\r\n    const progress = ((currentQuestion + 1) / mockQuestions.length) * 100;\r\n\r\n    return (\r\n        <Container className={classes.container}>\r\n            <Paper className={classes.paper}>\r\n                <Typography variant=\"h6\" className={classes.question}>\r\n                    {question.text}\r\n                </Typography>\r\n                {question.blanks.map(blank => (\r\n                    <TextField\r\n                        key={blank.id}\r\n                        label={`Blank ${blank.id}`}\r\n                        value={answers[question.id] ? answers[question.id][blank.id] : ''}\r\n                        onChange={(e) => handleAnswerChange(question.id, blank.id, e.target.value)}\r\n                        className={classes.answer}\r\n                    />\r\n                ))}\r\n                <LinearProgress variant=\"determinate\" value={progress} className={classes.progress} />\r\n                <Typography variant=\"body1\" className={classes.timer}>\r\n                    Time left: {formatTime(timeLeft)}\r\n                </Typography>\r\n                <Button onClick={handlePrevious} disabled={currentQuestion === 0}>Previous</Button>\r\n                <Button onClick={handleNext} disabled={currentQuestion === mockQuestions.length - 1}>Next</Button>\r\n                <Button onClick={handleSubmit}>Submit</Button>\r\n            </Paper>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Quiz;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}