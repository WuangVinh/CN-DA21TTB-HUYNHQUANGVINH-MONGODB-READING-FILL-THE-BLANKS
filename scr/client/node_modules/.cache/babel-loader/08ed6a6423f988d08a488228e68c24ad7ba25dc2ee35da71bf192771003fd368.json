{"ast":null,"code":"var _jsxFileName = \"C:\\\\Baocao\\\\english-quiz-app\\\\client\\\\src\\\\components\\\\AdminPanel.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { TextField, Button, List, ListItem, ListItemText, IconButton } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminPanel = () => {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [newQuestion, setNewQuestion] = useState('');\n  const [newBlanks, setNewBlanks] = useState([{\n    position: 1,\n    correctAnswer: ''\n  }]);\n  useEffect(() => {\n    fetchQuestions();\n  }, []);\n  const fetchQuestions = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/questions');\n      setQuestions(response.data);\n    } catch (error) {\n      console.error('Error fetching questions:', error);\n    }\n  };\n  const handleAddQuestion = async () => {\n    try {\n      const question = {\n        text: newQuestion,\n        blanks: newBlanks,\n        difficulty: 'easy',\n        category: 'grammar'\n      };\n      await axios.post('http://localhost:5000/api/questions', question);\n      fetchQuestions();\n      setNewQuestion('');\n      setNewBlanks([{\n        position: 1,\n        correctAnswer: ''\n      }]);\n    } catch (error) {\n      console.error('Error adding question:', error);\n    }\n  };\n  const handleDeleteQuestion = async id => {\n    try {\n      await axios.delete(`http://localhost:5000/api/questions/${id}`);\n      fetchQuestions();\n    } catch (error) {\n      console.error('Error deleting question:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Admin Panel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"New Question\",\n      value: newQuestion,\n      onChange: e => setNewQuestion(e.target.value),\n      fullWidth: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: handleAddQuestion,\n      children: \"Add Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: questions.map(question => /*#__PURE__*/_jsxDEV(ListItem, {\n        children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: question.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          edge: \"end\",\n          onClick: () => handleDeleteQuestion(question._id),\n          children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this)]\n      }, question._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n_s(AdminPanel, \"JOqQQN2DcX1uOyPFY+99vjd9Utg=\");\n_c = AdminPanel;\nexport default AdminPanel;\nvar _c;\n$RefreshReg$(_c, \"AdminPanel\");","map":{"version":3,"names":["React","useState","useEffect","axios","TextField","Button","List","ListItem","ListItemText","IconButton","DeleteIcon","jsxDEV","_jsxDEV","AdminPanel","_s","questions","setQuestions","newQuestion","setNewQuestion","newBlanks","setNewBlanks","position","correctAnswer","fetchQuestions","response","get","data","error","console","handleAddQuestion","question","text","blanks","difficulty","category","post","handleDeleteQuestion","id","delete","children","fileName","_jsxFileName","lineNumber","columnNumber","label","value","onChange","e","target","fullWidth","variant","color","onClick","map","primary","edge","_id","_c","$RefreshReg$"],"sources":["C:/Baocao/english-quiz-app/client/src/components/AdminPanel.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { TextField, Button, List, ListItem, ListItemText, IconButton } from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nconst AdminPanel = () => {\r\n    const [questions, setQuestions] = useState([]);\r\n    const [newQuestion, setNewQuestion] = useState('');\r\n    const [newBlanks, setNewBlanks] = useState([{ position: 1, correctAnswer: '' }]);\r\n\r\n    useEffect(() => {\r\n        fetchQuestions();\r\n    }, []);\r\n\r\n    const fetchQuestions = async () => {\r\n        try {\r\n            const response = await axios.get('http://localhost:5000/api/questions');\r\n            setQuestions(response.data);\r\n        } catch (error) {\r\n            console.error('Error fetching questions:', error);\r\n        }\r\n    };\r\n\r\n    const handleAddQuestion = async () => {\r\n        try {\r\n            const question = {\r\n                text: newQuestion,\r\n                blanks: newBlanks,\r\n                difficulty: 'easy',\r\n                category: 'grammar'\r\n            };\r\n            await axios.post('http://localhost:5000/api/questions', question);\r\n            fetchQuestions();\r\n            setNewQuestion('');\r\n            setNewBlanks([{ position: 1, correctAnswer: '' }]);\r\n        } catch (error) {\r\n            console.error('Error adding question:', error);\r\n        }\r\n    };\r\n\r\n    const handleDeleteQuestion = async (id) => {\r\n        try {\r\n            await axios.delete(`http://localhost:5000/api/questions/${id}`);\r\n            fetchQuestions();\r\n        } catch (error) {\r\n            console.error('Error deleting question:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Admin Panel</h2>\r\n            <TextField\r\n                label=\"New Question\"\r\n                value={newQuestion}\r\n                onChange={(e) => setNewQuestion(e.target.value)}\r\n                fullWidth\r\n            />\r\n            <Button variant=\"contained\" color=\"primary\" onClick={handleAddQuestion}>\r\n                Add Question\r\n            </Button>\r\n            <List>\r\n                {questions.map((question) => (\r\n                    <ListItem key={question._id}>\r\n                        <ListItemText primary={question.text} />\r\n                        <IconButton edge=\"end\" onClick={() => handleDeleteQuestion(question._id)}>\r\n                            <DeleteIcon />\r\n                        </IconButton>\r\n                    </ListItem>\r\n                ))}\r\n            </List>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AdminPanel;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}