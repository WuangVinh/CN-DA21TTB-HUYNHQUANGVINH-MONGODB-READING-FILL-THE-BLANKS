{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vvvin\\\\Downloads\\\\CN-DA21TTB-HUYNHQUANGVINH-MONGODB-READING-FILL-THE-BLANKS\\\\scr\\\\client\\\\src\\\\components\\\\Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Container, Paper, TextField, Button, Typography, makeStyles } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    padding: theme.spacing(4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  },\n  error: {\n    color: 'red',\n    marginTop: theme.spacing(2)\n  }\n}));\nconst Register = () => {\n  _s();\n  const classes = useStyles();\n  const history = useHistory();\n  const [formData, setFormData] = useState({\n    username: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const [error, setError] = useState('');\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (formData.password !== formData.confirmPassword) {\n      setError('Passwords do not match');\n      return;\n    }\n    try {\n      const response = await axios.post('http://localhost:5000/api/auth/register', {\n        username: formData.username,\n        email: formData.email,\n        password: formData.password\n      });\n      if (response.data.success) {\n        // Đăng ký thành công, chuyển đến trang đăng nhập\n        history.push('/login', {\n          message: 'Registration successful! Please login.'\n        });\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      setError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Registration failed');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.paper,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: classes.form,\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"outlined\",\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          name: \"username\",\n          label: \"Username\",\n          autoFocus: true,\n          value: formData.username,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"outlined\",\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          name: \"email\",\n          label: \"Email Address\",\n          value: formData.email,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"outlined\",\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          name: \"password\",\n          label: \"Password\",\n          type: \"password\",\n          id: \"password\",\n          autoComplete: \"new-password\",\n          value: formData.password,\n          onChange: e => setFormData({\n            ...formData,\n            password: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"outlined\",\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          name: \"confirmPassword\",\n          label: \"Confirm Password\",\n          type: \"password\",\n          id: \"confirmPassword\",\n          value: formData.confirmPassword,\n          onChange: e => setFormData({\n            ...formData,\n            confirmPassword: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.error,\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          fullWidth: true,\n          variant: \"contained\",\n          color: \"primary\",\n          className: classes.submit,\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          fullWidth: true,\n          variant: \"text\",\n          color: \"primary\",\n          onClick: () => history.push('/login'),\n          children: \"Already have an account? Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"Q6tAxzJh/tl9rAXgBFkUjxfPrss=\", false, function () {\n  return [useStyles, useHistory];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","Container","Paper","TextField","Button","Typography","makeStyles","useHistory","axios","jsxDEV","_jsxDEV","useStyles","theme","paper","marginTop","spacing","padding","display","flexDirection","alignItems","form","width","submit","margin","error","color","Register","_s","classes","history","formData","setFormData","username","email","password","confirmPassword","setError","handleChange","e","target","name","value","handleSubmit","preventDefault","response","post","data","success","push","message","_error$response","_error$response$data","component","maxWidth","children","className","variant","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","required","fullWidth","label","autoFocus","onChange","type","id","autoComplete","onClick","_c","$RefreshReg$"],"sources":["C:/Users/vvvin/Downloads/CN-DA21TTB-HUYNHQUANGVINH-MONGODB-READING-FILL-THE-BLANKS/scr/client/src/components/Register.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Container, Paper, TextField, Button, Typography, makeStyles } from '@material-ui/core';\r\nimport { useHistory } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    padding: theme.spacing(4),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  form: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  error: {\r\n    color: 'red',\r\n    marginTop: theme.spacing(2),\r\n  }\r\n}));\r\n\r\nconst Register = () => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [formData, setFormData] = useState({\r\n    username: '',\r\n    email: '',\r\n    password: '',\r\n    confirmPassword: ''\r\n  });\r\n  const [error, setError] = useState('');\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (formData.password !== formData.confirmPassword) {\r\n      setError('Passwords do not match');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/api/auth/register', {\r\n        username: formData.username,\r\n        email: formData.email,\r\n        password: formData.password\r\n      });\r\n\r\n      if (response.data.success) {\r\n        // Đăng ký thành công, chuyển đến trang đăng nhập\r\n        history.push('/login', { \r\n          message: 'Registration successful! Please login.' \r\n        });\r\n      }\r\n    } catch (error) {\r\n      setError(error.response?.data?.message || 'Registration failed');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <Paper className={classes.paper}>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Register\r\n        </Typography>\r\n        <form className={classes.form} onSubmit={handleSubmit}>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"username\"\r\n            label=\"Username\"\r\n            autoFocus\r\n            value={formData.username}\r\n            onChange={handleChange}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"email\"\r\n            label=\"Email Address\"\r\n            value={formData.email}\r\n            onChange={handleChange}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"new-password\"\r\n            value={formData.password}\r\n            onChange={(e) => setFormData({ ...formData, password: e.target.value })}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"confirmPassword\"\r\n            label=\"Confirm Password\"\r\n            type=\"password\"\r\n            id=\"confirmPassword\"\r\n            value={formData.confirmPassword}\r\n            onChange={(e) => setFormData({ ...formData, confirmPassword: e.target.value })}\r\n          />\r\n          {error && (\r\n            <Typography className={classes.error}>\r\n              {error}\r\n            </Typography>\r\n          )}\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Register\r\n          </Button>\r\n          <Button\r\n            fullWidth\r\n            variant=\"text\"\r\n            color=\"primary\"\r\n            onClick={() => history.push('/login')}\r\n          >\r\n            Already have an account? Login\r\n          </Button>\r\n        </form>\r\n      </Paper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}