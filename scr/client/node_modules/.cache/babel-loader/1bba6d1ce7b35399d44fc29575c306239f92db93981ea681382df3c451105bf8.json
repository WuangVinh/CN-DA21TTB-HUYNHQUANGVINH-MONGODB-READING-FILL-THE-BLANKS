{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vvvin\\\\OneDrive\\\\M\\xE1y t\\xEDnh\\\\Baocao\\\\Baocao\\\\english-quiz-app\\\\client\\\\src\\\\components\\\\Quiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Card, CardContent, Typography, Box, TextField, Button, LinearProgress, Chip, makeStyles, CircularProgress, Divider } from '@material-ui/core';\nimport { Timer as TimerIcon, NavigateNext, NavigateBefore, Check, Save as SaveIcon } from '@material-ui/icons';\nimport { useParams, useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    minHeight: '100vh',\n    backgroundColor: '#FFF8E1',\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4)\n  },\n  card: {\n    borderRadius: 16,\n    boxShadow: '0 4px 20px rgba(183, 121, 31, 0.1)'\n  },\n  header: {\n    background: 'linear-gradient(45deg, #D69E2E 30%, #ECC94B 90%)',\n    color: 'white',\n    padding: theme.spacing(3),\n    borderRadius: '16px 16px 0 0'\n  },\n  content: {\n    padding: theme.spacing(3)\n  },\n  readingText: {\n    fontSize: '1.1rem',\n    lineHeight: 1.8,\n    color: '#2D3748',\n    marginBottom: theme.spacing(4),\n    whiteSpace: 'pre-line'\n  },\n  blankField: {\n    display: 'inline-block',\n    width: '200px',\n    margin: '0 8px',\n    position: 'relative',\n    '& .MuiOutlinedInput-root': {\n      backgroundColor: 'white',\n      '&:hover fieldset': {\n        borderColor: '#D69E2E'\n      },\n      '&.Mui-focused fieldset': {\n        borderColor: '#B7791F'\n      }\n    }\n  },\n  answerHover: {\n    position: 'absolute',\n    top: '100%',\n    left: '0',\n    backgroundColor: 'white',\n    padding: theme.spacing(1),\n    borderRadius: '4px',\n    boxShadow: '0 2px 8px rgba(0,0,0,0.1)',\n    zIndex: 1000,\n    display: 'none',\n    '& .MuiTextField-root:hover + &': {\n      display: 'block'\n    }\n  },\n  timer: {\n    display: 'flex',\n    alignItems: 'center',\n    color: 'white',\n    fontSize: '1.2rem',\n    '& .MuiSvgIcon-root': {\n      marginRight: theme.spacing(1)\n    }\n  },\n  progress: {\n    height: 10,\n    borderRadius: 5,\n    backgroundColor: 'rgba(255, 255, 255, 0.2)',\n    '& .MuiLinearProgress-bar': {\n      backgroundColor: 'white'\n    },\n    marginTop: theme.spacing(2)\n  },\n  optionsContainer: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    gap: theme.spacing(1),\n    marginBottom: theme.spacing(3)\n  },\n  optionChip: {\n    backgroundColor: 'white',\n    color: '#744210',\n    '&:hover': {\n      backgroundColor: '#FEFCBF'\n    },\n    '&.selected': {\n      backgroundColor: '#D69E2E',\n      color: 'white'\n    }\n  },\n  buttonContainer: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    marginTop: theme.spacing(4)\n  },\n  button: {\n    padding: '12px 24px',\n    borderRadius: 25,\n    '&.submit': {\n      background: 'linear-gradient(45deg, #D69E2E 30%, #ECC94B 90%)',\n      color: 'white'\n    }\n  }\n}));\nconst Quiz = () => {\n  _s();\n  const classes = useStyles();\n  const {\n    id\n  } = useParams();\n  const history = useHistory();\n  const [quiz, setQuiz] = useState(null);\n  const [answers, setAnswers] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [timeLeft, setTimeLeft] = useState(0);\n  useEffect(() => {\n    const fetchQuiz = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5000/api/questions/${id}`);\n        setQuiz(response.data);\n        setTimeLeft(response.data.blanks.length * 120); // 2 minutes per blank\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching quiz:', error);\n        setLoading(false);\n      }\n    };\n    fetchQuiz();\n  }, [id]);\n  useEffect(() => {\n    if (timeLeft <= 0) return;\n    const timer = setInterval(() => {\n      setTimeLeft(prev => prev - 1);\n    }, 1000);\n    return () => clearInterval(timer);\n  }, [timeLeft]);\n  const handleAnswerChange = (blankId, value) => {\n    setAnswers(prev => ({\n      ...prev,\n      [blankId]: value\n    }));\n  };\n  const handleSubmit = () => {\n    const results = {\n      quiz: quiz,\n      answers: answers,\n      timeSpent: quiz.blanks.length * 120 - timeLeft\n    };\n    history.push('/result', {\n      results\n    });\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      minHeight: \"80vh\",\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n        style: {\n          color: '#D69E2E'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }, this);\n  }\n  if (!quiz) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      minHeight: \"80vh\",\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"error\",\n        children: \"Quiz not found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }, this);\n  }\n  const formatTime = seconds => {\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = seconds % 60;\n    return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`;\n  };\n  const renderQuestionText = () => {\n    const parts = quiz.question_text.split('____');\n    return parts.map((part, index) => {\n      var _quiz$blanks$index$op;\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [part, index < parts.length - 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.blankField,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"outlined\",\n            size: \"small\",\n            value: answers[quiz.blanks[index].id] || '',\n            onChange: e => handleAnswerChange(quiz.blanks[index].id, e.target.value),\n            onMouseEnter: e => {\n              const hoverDiv = e.target.parentElement.querySelector('.answer-hover');\n              if (hoverDiv) {\n                hoverDiv.style.display = 'block';\n              }\n            },\n            onMouseLeave: e => {\n              const hoverDiv = e.target.parentElement.querySelector('.answer-hover');\n              if (hoverDiv) {\n                hoverDiv.style.display = 'none';\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `${classes.answerHover} answer-hover`,\n            children: (_quiz$blanks$index$op = quiz.blanks[index].options) === null || _quiz$blanks$index$op === void 0 ? void 0 : _quiz$blanks$index$op.map((option, optIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: option\n            }, optIndex, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 21\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 13\n      }, this);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"lg\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: classes.card,\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          className: classes.header,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            gutterBottom: true,\n            children: quiz.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            className: classes.timer,\n            children: [/*#__PURE__*/_jsxDEV(TimerIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 29\n            }, this), formatTime(timeLeft)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(LinearProgress, {\n            variant: \"determinate\",\n            value: timeLeft / (quiz.blanks.length * 120) * 100,\n            className: classes.progress\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          className: classes.content,\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            className: classes.readingText,\n            children: renderQuestionText()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 25\n          }, this), quiz.blanks.map((blank, index) => /*#__PURE__*/_jsxDEV(Box, {\n            mb: 4,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              gutterBottom: true,\n              children: [\"Blank \", index + 1, \" Options:\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              className: classes.optionsContainer,\n              children: blank.options.map(option => /*#__PURE__*/_jsxDEV(Chip, {\n                label: option,\n                className: `${classes.optionChip} ${answers[blank.id] === option ? 'selected' : ''}`,\n                onClick: () => handleAnswerChange(blank.id, option),\n                clickable: true\n              }, option, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 33\n            }, this)]\n          }, blank.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 29\n          }, this)), /*#__PURE__*/_jsxDEV(Box, {\n            className: classes.buttonContainer,\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              color: \"primary\",\n              className: classes.button,\n              onClick: () => history.push('/'),\n              children: \"Back to List\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              className: `${classes.button} submit`,\n              onClick: handleSubmit,\n              startIcon: /*#__PURE__*/_jsxDEV(Check, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 44\n              }, this),\n              children: \"Submit Answers\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 241,\n    columnNumber: 9\n  }, this);\n};\n_s(Quiz, \"EITC+eqXiMFQT/DQxo0hPyeQMII=\", false, function () {\n  return [useStyles, useParams, useHistory];\n});\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","useEffect","Container","Card","CardContent","Typography","Box","TextField","Button","LinearProgress","Chip","makeStyles","CircularProgress","Divider","Timer","TimerIcon","NavigateNext","NavigateBefore","Check","Save","SaveIcon","useParams","useHistory","axios","jsxDEV","_jsxDEV","useStyles","theme","root","minHeight","backgroundColor","paddingTop","spacing","paddingBottom","card","borderRadius","boxShadow","header","background","color","padding","content","readingText","fontSize","lineHeight","marginBottom","whiteSpace","blankField","display","width","margin","position","borderColor","answerHover","top","left","zIndex","timer","alignItems","marginRight","progress","height","marginTop","optionsContainer","flexWrap","gap","optionChip","buttonContainer","justifyContent","button","Quiz","_s","classes","id","history","quiz","setQuiz","answers","setAnswers","loading","setLoading","timeLeft","setTimeLeft","fetchQuiz","response","get","data","blanks","length","error","console","setInterval","prev","clearInterval","handleAnswerChange","blankId","value","handleSubmit","results","timeSpent","push","children","style","fileName","_jsxFileName","lineNumber","columnNumber","formatTime","seconds","minutes","Math","floor","remainingSeconds","toString","padStart","renderQuestionText","parts","question_text","split","map","part","index","_quiz$blanks$index$op","Fragment","className","variant","size","onChange","e","target","onMouseEnter","hoverDiv","parentElement","querySelector","onMouseLeave","options","option","optIndex","maxWidth","gutterBottom","title","blank","mb","label","onClick","clickable","startIcon","_c","$RefreshReg$"],"sources":["C:/Users/vvvin/OneDrive/Máy tính/Baocao/Baocao/english-quiz-app/client/src/components/Quiz.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { \r\n    Container, \r\n    Card, \r\n    CardContent, \r\n    Typography,\r\n    Box,\r\n    TextField,\r\n    Button,\r\n    LinearProgress,\r\n    Chip,\r\n    makeStyles,\r\n    CircularProgress,\r\n    Divider\r\n} from '@material-ui/core';\r\nimport {\r\n    Timer as TimerIcon,\r\n    NavigateNext,\r\n    NavigateBefore,\r\n    Check,\r\n    Save as SaveIcon\r\n} from '@material-ui/icons';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        minHeight: '100vh',\r\n        backgroundColor: '#FFF8E1',\r\n        paddingTop: theme.spacing(4),\r\n        paddingBottom: theme.spacing(4),\r\n    },\r\n    card: {\r\n        borderRadius: 16,\r\n        boxShadow: '0 4px 20px rgba(183, 121, 31, 0.1)',\r\n    },\r\n    header: {\r\n        background: 'linear-gradient(45deg, #D69E2E 30%, #ECC94B 90%)',\r\n        color: 'white',\r\n        padding: theme.spacing(3),\r\n        borderRadius: '16px 16px 0 0',\r\n    },\r\n    content: {\r\n        padding: theme.spacing(3),\r\n    },\r\n    readingText: {\r\n        fontSize: '1.1rem',\r\n        lineHeight: 1.8,\r\n        color: '#2D3748',\r\n        marginBottom: theme.spacing(4),\r\n        whiteSpace: 'pre-line',\r\n    },\r\n    blankField: {\r\n        display: 'inline-block',\r\n        width: '200px',\r\n        margin: '0 8px',\r\n        position: 'relative',\r\n        '& .MuiOutlinedInput-root': {\r\n            backgroundColor: 'white',\r\n            '&:hover fieldset': {\r\n                borderColor: '#D69E2E',\r\n            },\r\n            '&.Mui-focused fieldset': {\r\n                borderColor: '#B7791F',\r\n            },\r\n        },\r\n    },\r\n    answerHover: {\r\n        position: 'absolute',\r\n        top: '100%',\r\n        left: '0',\r\n        backgroundColor: 'white',\r\n        padding: theme.spacing(1),\r\n        borderRadius: '4px',\r\n        boxShadow: '0 2px 8px rgba(0,0,0,0.1)',\r\n        zIndex: 1000,\r\n        display: 'none',\r\n        '& .MuiTextField-root:hover + &': {\r\n            display: 'block',\r\n        },\r\n    },\r\n    timer: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        color: 'white',\r\n        fontSize: '1.2rem',\r\n        '& .MuiSvgIcon-root': {\r\n            marginRight: theme.spacing(1),\r\n        },\r\n    },\r\n    progress: {\r\n        height: 10,\r\n        borderRadius: 5,\r\n        backgroundColor: 'rgba(255, 255, 255, 0.2)',\r\n        '& .MuiLinearProgress-bar': {\r\n            backgroundColor: 'white',\r\n        },\r\n        marginTop: theme.spacing(2),\r\n    },\r\n    optionsContainer: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        gap: theme.spacing(1),\r\n        marginBottom: theme.spacing(3),\r\n    },\r\n    optionChip: {\r\n        backgroundColor: 'white',\r\n        color: '#744210',\r\n        '&:hover': {\r\n            backgroundColor: '#FEFCBF',\r\n        },\r\n        '&.selected': {\r\n            backgroundColor: '#D69E2E',\r\n            color: 'white',\r\n        },\r\n    },\r\n    buttonContainer: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        marginTop: theme.spacing(4),\r\n    },\r\n    button: {\r\n        padding: '12px 24px',\r\n        borderRadius: 25,\r\n        '&.submit': {\r\n            background: 'linear-gradient(45deg, #D69E2E 30%, #ECC94B 90%)',\r\n            color: 'white',\r\n        },\r\n    },\r\n}));\r\n\r\nconst Quiz = () => {\r\n    const classes = useStyles();\r\n    const { id } = useParams();\r\n    const history = useHistory();\r\n    const [quiz, setQuiz] = useState(null);\r\n    const [answers, setAnswers] = useState({});\r\n    const [loading, setLoading] = useState(true);\r\n    const [timeLeft, setTimeLeft] = useState(0);\r\n\r\n    useEffect(() => {\r\n        const fetchQuiz = async () => {\r\n            try {\r\n                const response = await axios.get(`http://localhost:5000/api/questions/${id}`);\r\n                setQuiz(response.data);\r\n                setTimeLeft(response.data.blanks.length * 120); // 2 minutes per blank\r\n                setLoading(false);\r\n            } catch (error) {\r\n                console.error('Error fetching quiz:', error);\r\n                setLoading(false);\r\n            }\r\n        };\r\n        fetchQuiz();\r\n    }, [id]);\r\n\r\n    useEffect(() => {\r\n        if (timeLeft <= 0) return;\r\n\r\n        const timer = setInterval(() => {\r\n            setTimeLeft(prev => prev - 1);\r\n        }, 1000);\r\n\r\n        return () => clearInterval(timer);\r\n    }, [timeLeft]);\r\n\r\n    const handleAnswerChange = (blankId, value) => {\r\n        setAnswers(prev => ({\r\n            ...prev,\r\n            [blankId]: value\r\n        }));\r\n    };\r\n\r\n    const handleSubmit = () => {\r\n        const results = {\r\n            quiz: quiz,\r\n            answers: answers,\r\n            timeSpent: quiz.blanks.length * 120 - timeLeft\r\n        };\r\n        history.push('/result', { results });\r\n    };\r\n\r\n    if (loading) {\r\n        return (\r\n            <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" minHeight=\"80vh\">\r\n                <CircularProgress style={{ color: '#D69E2E' }} />\r\n            </Box>\r\n        );\r\n    }\r\n\r\n    if (!quiz) {\r\n        return (\r\n            <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" minHeight=\"80vh\">\r\n                <Typography color=\"error\">Quiz not found</Typography>\r\n            </Box>\r\n        );\r\n    }\r\n\r\n    const formatTime = (seconds) => {\r\n        const minutes = Math.floor(seconds / 60);\r\n        const remainingSeconds = seconds % 60;\r\n        return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`;\r\n    };\r\n\r\n    const renderQuestionText = () => {\r\n        const parts = quiz.question_text.split('____');\r\n        return parts.map((part, index) => (\r\n            <React.Fragment key={index}>\r\n                {part}\r\n                {index < parts.length - 1 && (\r\n                    <div className={classes.blankField}>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            size=\"small\"\r\n                            value={answers[quiz.blanks[index].id] || ''}\r\n                            onChange={(e) => handleAnswerChange(quiz.blanks[index].id, e.target.value)}\r\n                            onMouseEnter={(e) => {\r\n                                const hoverDiv = e.target.parentElement.querySelector('.answer-hover');\r\n                                if (hoverDiv) {\r\n                                    hoverDiv.style.display = 'block';\r\n                                }\r\n                            }}\r\n                            onMouseLeave={(e) => {\r\n                                const hoverDiv = e.target.parentElement.querySelector('.answer-hover');\r\n                                if (hoverDiv) {\r\n                                    hoverDiv.style.display = 'none';\r\n                                }\r\n                            }}\r\n                        />\r\n                        <div className={`${classes.answerHover} answer-hover`}>\r\n                            {quiz.blanks[index].options?.map((option, optIndex) => (\r\n                                <div key={optIndex}>{option}</div>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </React.Fragment>\r\n        ));\r\n    };\r\n\r\n    return (\r\n        <Box className={classes.root}>\r\n            <Container maxWidth=\"lg\">\r\n                <Card className={classes.card}>\r\n                    <Box className={classes.header}>\r\n                        <Typography variant=\"h5\" gutterBottom>\r\n                            {quiz.title}\r\n                        </Typography>\r\n                        <Box className={classes.timer}>\r\n                            <TimerIcon />\r\n                            {formatTime(timeLeft)}\r\n                        </Box>\r\n                        <LinearProgress \r\n                            variant=\"determinate\" \r\n                            value={(timeLeft / (quiz.blanks.length * 120)) * 100}\r\n                            className={classes.progress}\r\n                        />\r\n                    </Box>\r\n\r\n                    <CardContent className={classes.content}>\r\n                        <Box className={classes.readingText}>\r\n                            {renderQuestionText()}\r\n                        </Box>\r\n\r\n                        {quiz.blanks.map((blank, index) => (\r\n                            <Box key={blank.id} mb={4}>\r\n                                <Typography variant=\"subtitle1\" gutterBottom>\r\n                                    Blank {index + 1} Options:\r\n                                </Typography>\r\n                                <Box className={classes.optionsContainer}>\r\n                                    {blank.options.map((option) => (\r\n                                        <Chip\r\n                                            key={option}\r\n                                            label={option}\r\n                                            className={`${classes.optionChip} ${\r\n                                                answers[blank.id] === option ? 'selected' : ''\r\n                                            }`}\r\n                                            onClick={() => handleAnswerChange(blank.id, option)}\r\n                                            clickable\r\n                                        />\r\n                                    ))}\r\n                                </Box>\r\n                                <Divider />\r\n                            </Box>\r\n                        ))}\r\n\r\n                        <Box className={classes.buttonContainer}>\r\n                            <Button\r\n                                variant=\"outlined\"\r\n                                color=\"primary\"\r\n                                className={classes.button}\r\n                                onClick={() => history.push('/')}\r\n                            >\r\n                                Back to List\r\n                            </Button>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                className={`${classes.button} submit`}\r\n                                onClick={handleSubmit}\r\n                                startIcon={<Check />}\r\n                            >\r\n                                Submit Answers\r\n                            </Button>\r\n                        </Box>\r\n                    </CardContent>\r\n                </Card>\r\n            </Container>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default Quiz;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}