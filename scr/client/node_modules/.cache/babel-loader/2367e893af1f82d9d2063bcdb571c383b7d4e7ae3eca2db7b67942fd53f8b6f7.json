{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vvvin\\\\OneDrive\\\\M\\xE1y t\\xEDnh\\\\Baocao\\\\Baocao\\\\english-quiz-app\\\\client\\\\src\\\\components\\\\Quiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Card, CardContent, Typography, Box, TextField, Button, LinearProgress, Chip, makeStyles, CircularProgress, Divider } from '@material-ui/core';\nimport { Timer as TimerIcon, NavigateNext, NavigateBefore, Check, Save as SaveIcon } from '@material-ui/icons';\nimport { useParams, useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    minHeight: '100vh',\n    backgroundColor: '#FFF8E1',\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4)\n  },\n  card: {\n    borderRadius: 16,\n    boxShadow: '0 4px 20px rgba(183, 121, 31, 0.1)'\n  },\n  header: {\n    background: 'linear-gradient(45deg, #D69E2E 30%, #ECC94B 90%)',\n    color: 'white',\n    padding: theme.spacing(3),\n    borderRadius: '16px 16px 0 0'\n  },\n  content: {\n    padding: theme.spacing(3)\n  },\n  readingText: {\n    position: 'relative',\n    padding: theme.spacing(2),\n    backgroundColor: '#fff',\n    borderRadius: theme.spacing(1),\n    marginBottom: theme.spacing(3),\n    fontSize: '1.1rem',\n    lineHeight: 1.6\n  },\n  blankField: {\n    display: 'inline-block',\n    width: '200px',\n    margin: '0 8px',\n    '& .MuiOutlinedInput-root': {\n      backgroundColor: 'white',\n      '&:hover fieldset': {\n        borderColor: '#D69E2E'\n      },\n      '&.Mui-focused fieldset': {\n        borderColor: '#B7791F'\n      }\n    }\n  },\n  timer: {\n    display: 'flex',\n    alignItems: 'center',\n    color: 'white',\n    fontSize: '1.2rem',\n    '& .MuiSvgIcon-root': {\n      marginRight: theme.spacing(1)\n    }\n  },\n  progress: {\n    height: 10,\n    borderRadius: 5,\n    backgroundColor: 'rgba(255, 255, 255, 0.2)',\n    '& .MuiLinearProgress-bar': {\n      backgroundColor: 'white'\n    },\n    marginTop: theme.spacing(2)\n  },\n  optionsContainer: {\n    position: 'fixed',\n    backgroundColor: 'white',\n    padding: theme.spacing(1),\n    borderRadius: '4px',\n    boxShadow: '0 2px 8px rgba(0,0,0,0.1)',\n    zIndex: 1000,\n    minWidth: '150px',\n    pointerEvents: 'none',\n    display: 'none'\n  },\n  optionItem: {\n    padding: theme.spacing(0.5),\n    '&:hover': {\n      backgroundColor: '#f5f5f5'\n    }\n  },\n  optionChip: {\n    backgroundColor: 'white',\n    color: '#744210',\n    '&:hover': {\n      backgroundColor: '#FEFCBF'\n    },\n    '&.selected': {\n      backgroundColor: '#D69E2E',\n      color: 'white'\n    }\n  },\n  buttonContainer: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    marginTop: theme.spacing(4)\n  },\n  button: {\n    padding: '12px 24px',\n    borderRadius: 25,\n    '&.submit': {\n      background: 'linear-gradient(45deg, #D69E2E 30%, #ECC94B 90%)',\n      color: 'white'\n    }\n  }\n}));\nconst Quiz = () => {\n  _s();\n  const classes = useStyles();\n  const {\n    id\n  } = useParams();\n  const history = useHistory();\n  const [quiz, setQuiz] = useState(null);\n  const [answers, setAnswers] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [timeLeft, setTimeLeft] = useState(0);\n  const [mousePosition, setMousePosition] = useState({\n    x: 0,\n    y: 0\n  });\n  const [activeBlankId, setActiveBlankId] = useState(null);\n  useEffect(() => {\n    const fetchQuiz = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5000/api/questions/${id}`);\n        setQuiz(response.data);\n        setTimeLeft(response.data.blanks.length * 120); // 2 minutes per blank\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching quiz:', error);\n        setLoading(false);\n      }\n    };\n    fetchQuiz();\n  }, [id]);\n  useEffect(() => {\n    if (timeLeft <= 0) return;\n    const timer = setInterval(() => {\n      setTimeLeft(prev => prev - 1);\n    }, 1000);\n    return () => clearInterval(timer);\n  }, [timeLeft]);\n  const handleAnswerChange = (blankId, value) => {\n    setAnswers(prev => ({\n      ...prev,\n      [blankId]: value\n    }));\n  };\n  const handleSubmit = () => {\n    const results = {\n      quiz: quiz,\n      answers: answers,\n      timeSpent: quiz.blanks.length * 120 - timeLeft\n    };\n    history.push('/result', {\n      results\n    });\n  };\n  const handleMouseMove = e => {\n    setMousePosition({\n      x: e.clientX + 15,\n      y: e.clientY + 15\n    });\n  };\n  const renderQuestionText = () => {\n    var _quiz$blanks$find;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.readingText,\n        children: quiz.question_text.split('____').map((part, index, array) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [part, index < array.length - 1 && /*#__PURE__*/_jsxDEV(TextField, {\n            value: answers[quiz.blanks[index].id] || '',\n            className: classes.blankInput,\n            variant: \"outlined\",\n            size: \"small\",\n            disabled: true,\n            onMouseEnter: () => setActiveBlankId(quiz.blanks[index].id),\n            onMouseLeave: () => setActiveBlankId(null)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 33\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.optionsContainer,\n        style: {\n          display: activeBlankId ? 'block' : 'none',\n          left: mousePosition.x,\n          top: mousePosition.y\n        },\n        children: activeBlankId && ((_quiz$blanks$find = quiz.blanks.find(b => b.id === activeBlankId)) === null || _quiz$blanks$find === void 0 ? void 0 : _quiz$blanks$find.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.optionItem,\n          children: option\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 25\n        }, this)))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  };\n  useEffect(() => {\n    document.addEventListener('mousemove', handleMouseMove);\n    return () => {\n      document.removeEventListener('mousemove', handleMouseMove);\n    };\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      minHeight: \"80vh\",\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n        style: {\n          color: '#D69E2E'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 13\n    }, this);\n  }\n  if (!quiz) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      minHeight: \"80vh\",\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"error\",\n        children: \"Quiz not found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 13\n    }, this);\n  }\n  const formatTime = seconds => {\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = seconds % 60;\n    return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`;\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"lg\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: classes.card,\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          className: classes.header,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            gutterBottom: true,\n            children: quiz.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            className: classes.timer,\n            children: [/*#__PURE__*/_jsxDEV(TimerIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 29\n            }, this), formatTime(timeLeft)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(LinearProgress, {\n            variant: \"determinate\",\n            value: timeLeft / (quiz.blanks.length * 120) * 100,\n            className: classes.progress\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          className: classes.content,\n          children: [renderQuestionText(), quiz.blanks.map((blank, index) => /*#__PURE__*/_jsxDEV(Box, {\n            mb: 4,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              gutterBottom: true,\n              children: [\"Blank \", index + 1, \" Options:\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              className: classes.optionsContainer,\n              children: blank.options.map(option => /*#__PURE__*/_jsxDEV(Chip, {\n                label: option,\n                className: `${classes.optionChip} ${answers[blank.id] === option ? 'selected' : ''}`,\n                onClick: () => handleAnswerChange(blank.id, option),\n                clickable: true\n              }, option, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 33\n            }, this)]\n          }, blank.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 29\n          }, this)), /*#__PURE__*/_jsxDEV(Box, {\n            className: classes.buttonContainer,\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              color: \"primary\",\n              className: classes.button,\n              onClick: () => history.push('/'),\n              children: \"Back to List\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              className: `${classes.button} submit`,\n              onClick: handleSubmit,\n              startIcon: /*#__PURE__*/_jsxDEV(Check, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 44\n              }, this),\n              children: \"Submit Answers\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 259,\n    columnNumber: 9\n  }, this);\n};\n_s(Quiz, \"TsdvSGtT9nC6/VLGJiCuSQcF9lg=\", false, function () {\n  return [useStyles, useParams, useHistory];\n});\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","useEffect","Container","Card","CardContent","Typography","Box","TextField","Button","LinearProgress","Chip","makeStyles","CircularProgress","Divider","Timer","TimerIcon","NavigateNext","NavigateBefore","Check","Save","SaveIcon","useParams","useHistory","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","useStyles","theme","root","minHeight","backgroundColor","paddingTop","spacing","paddingBottom","card","borderRadius","boxShadow","header","background","color","padding","content","readingText","position","marginBottom","fontSize","lineHeight","blankField","display","width","margin","borderColor","timer","alignItems","marginRight","progress","height","marginTop","optionsContainer","zIndex","minWidth","pointerEvents","optionItem","optionChip","buttonContainer","justifyContent","button","Quiz","_s","classes","id","history","quiz","setQuiz","answers","setAnswers","loading","setLoading","timeLeft","setTimeLeft","mousePosition","setMousePosition","x","y","activeBlankId","setActiveBlankId","fetchQuiz","response","get","data","blanks","length","error","console","setInterval","prev","clearInterval","handleAnswerChange","blankId","value","handleSubmit","results","timeSpent","push","handleMouseMove","e","clientX","clientY","renderQuestionText","_quiz$blanks$find","children","className","question_text","split","map","part","index","array","blankInput","variant","size","disabled","onMouseEnter","onMouseLeave","fileName","_jsxFileName","lineNumber","columnNumber","style","left","top","find","b","options","option","document","addEventListener","removeEventListener","formatTime","seconds","minutes","Math","floor","remainingSeconds","toString","padStart","maxWidth","gutterBottom","title","blank","mb","label","onClick","clickable","startIcon","_c","$RefreshReg$"],"sources":["C:/Users/vvvin/OneDrive/Máy tính/Baocao/Baocao/english-quiz-app/client/src/components/Quiz.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { \r\n    Container, \r\n    Card, \r\n    CardContent, \r\n    Typography,\r\n    Box,\r\n    TextField,\r\n    Button,\r\n    LinearProgress,\r\n    Chip,\r\n    makeStyles,\r\n    CircularProgress,\r\n    Divider\r\n} from '@material-ui/core';\r\nimport {\r\n    Timer as TimerIcon,\r\n    NavigateNext,\r\n    NavigateBefore,\r\n    Check,\r\n    Save as SaveIcon\r\n} from '@material-ui/icons';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        minHeight: '100vh',\r\n        backgroundColor: '#FFF8E1',\r\n        paddingTop: theme.spacing(4),\r\n        paddingBottom: theme.spacing(4),\r\n    },\r\n    card: {\r\n        borderRadius: 16,\r\n        boxShadow: '0 4px 20px rgba(183, 121, 31, 0.1)',\r\n    },\r\n    header: {\r\n        background: 'linear-gradient(45deg, #D69E2E 30%, #ECC94B 90%)',\r\n        color: 'white',\r\n        padding: theme.spacing(3),\r\n        borderRadius: '16px 16px 0 0',\r\n    },\r\n    content: {\r\n        padding: theme.spacing(3),\r\n    },\r\n    readingText: {\r\n        position: 'relative',\r\n        padding: theme.spacing(2),\r\n        backgroundColor: '#fff',\r\n        borderRadius: theme.spacing(1),\r\n        marginBottom: theme.spacing(3),\r\n        fontSize: '1.1rem',\r\n        lineHeight: 1.6,\r\n    },\r\n    blankField: {\r\n        display: 'inline-block',\r\n        width: '200px',\r\n        margin: '0 8px',\r\n        '& .MuiOutlinedInput-root': {\r\n            backgroundColor: 'white',\r\n            '&:hover fieldset': {\r\n                borderColor: '#D69E2E',\r\n            },\r\n            '&.Mui-focused fieldset': {\r\n                borderColor: '#B7791F',\r\n            },\r\n        },\r\n    },\r\n    timer: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        color: 'white',\r\n        fontSize: '1.2rem',\r\n        '& .MuiSvgIcon-root': {\r\n            marginRight: theme.spacing(1),\r\n        },\r\n    },\r\n    progress: {\r\n        height: 10,\r\n        borderRadius: 5,\r\n        backgroundColor: 'rgba(255, 255, 255, 0.2)',\r\n        '& .MuiLinearProgress-bar': {\r\n            backgroundColor: 'white',\r\n        },\r\n        marginTop: theme.spacing(2),\r\n    },\r\n    optionsContainer: {\r\n        position: 'fixed',\r\n        backgroundColor: 'white',\r\n        padding: theme.spacing(1),\r\n        borderRadius: '4px',\r\n        boxShadow: '0 2px 8px rgba(0,0,0,0.1)',\r\n        zIndex: 1000,\r\n        minWidth: '150px',\r\n        pointerEvents: 'none',\r\n        display: 'none',\r\n    },\r\n    optionItem: {\r\n        padding: theme.spacing(0.5),\r\n        '&:hover': {\r\n            backgroundColor: '#f5f5f5',\r\n        }\r\n    },\r\n    optionChip: {\r\n        backgroundColor: 'white',\r\n        color: '#744210',\r\n        '&:hover': {\r\n            backgroundColor: '#FEFCBF',\r\n        },\r\n        '&.selected': {\r\n            backgroundColor: '#D69E2E',\r\n            color: 'white',\r\n        },\r\n    },\r\n    buttonContainer: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        marginTop: theme.spacing(4),\r\n    },\r\n    button: {\r\n        padding: '12px 24px',\r\n        borderRadius: 25,\r\n        '&.submit': {\r\n            background: 'linear-gradient(45deg, #D69E2E 30%, #ECC94B 90%)',\r\n            color: 'white',\r\n        },\r\n    },\r\n}));\r\n\r\nconst Quiz = () => {\r\n    const classes = useStyles();\r\n    const { id } = useParams();\r\n    const history = useHistory();\r\n    const [quiz, setQuiz] = useState(null);\r\n    const [answers, setAnswers] = useState({});\r\n    const [loading, setLoading] = useState(true);\r\n    const [timeLeft, setTimeLeft] = useState(0);\r\n    const [mousePosition, setMousePosition] = useState({ x: 0, y: 0 });\r\n    const [activeBlankId, setActiveBlankId] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchQuiz = async () => {\r\n            try {\r\n                const response = await axios.get(`http://localhost:5000/api/questions/${id}`);\r\n                setQuiz(response.data);\r\n                setTimeLeft(response.data.blanks.length * 120); // 2 minutes per blank\r\n                setLoading(false);\r\n            } catch (error) {\r\n                console.error('Error fetching quiz:', error);\r\n                setLoading(false);\r\n            }\r\n        };\r\n        fetchQuiz();\r\n    }, [id]);\r\n\r\n    useEffect(() => {\r\n        if (timeLeft <= 0) return;\r\n\r\n        const timer = setInterval(() => {\r\n            setTimeLeft(prev => prev - 1);\r\n        }, 1000);\r\n\r\n        return () => clearInterval(timer);\r\n    }, [timeLeft]);\r\n\r\n    const handleAnswerChange = (blankId, value) => {\r\n        setAnswers(prev => ({\r\n            ...prev,\r\n            [blankId]: value\r\n        }));\r\n    };\r\n\r\n    const handleSubmit = () => {\r\n        const results = {\r\n            quiz: quiz,\r\n            answers: answers,\r\n            timeSpent: quiz.blanks.length * 120 - timeLeft\r\n        };\r\n        history.push('/result', { results });\r\n    };\r\n\r\n    const handleMouseMove = (e) => {\r\n        setMousePosition({\r\n            x: e.clientX + 15,\r\n            y: e.clientY + 15\r\n        });\r\n    };\r\n\r\n    const renderQuestionText = () => {\r\n        return (\r\n            <>\r\n                <div className={classes.readingText}>\r\n                    {quiz.question_text.split('____').map((part, index, array) => (\r\n                        <React.Fragment key={index}>\r\n                            {part}\r\n                            {index < array.length - 1 && (\r\n                                <TextField\r\n                                    value={answers[quiz.blanks[index].id] || ''}\r\n                                    className={classes.blankInput}\r\n                                    variant=\"outlined\"\r\n                                    size=\"small\"\r\n                                    disabled\r\n                                    onMouseEnter={() => setActiveBlankId(quiz.blanks[index].id)}\r\n                                    onMouseLeave={() => setActiveBlankId(null)}\r\n                                />\r\n                            )}\r\n                        </React.Fragment>\r\n                    ))}\r\n                </div>\r\n\r\n                <div \r\n                    className={classes.optionsContainer}\r\n                    style={{\r\n                        display: activeBlankId ? 'block' : 'none',\r\n                        left: mousePosition.x,\r\n                        top: mousePosition.y\r\n                    }}\r\n                >\r\n                    {activeBlankId && quiz.blanks.find(b => b.id === activeBlankId)?.options.map((option, index) => (\r\n                        <div key={index} className={classes.optionItem}>\r\n                            {option}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </>\r\n        );\r\n    };\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('mousemove', handleMouseMove);\r\n        return () => {\r\n            document.removeEventListener('mousemove', handleMouseMove);\r\n        };\r\n    }, []);\r\n\r\n    if (loading) {\r\n        return (\r\n            <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" minHeight=\"80vh\">\r\n                <CircularProgress style={{ color: '#D69E2E' }} />\r\n            </Box>\r\n        );\r\n    }\r\n\r\n    if (!quiz) {\r\n        return (\r\n            <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" minHeight=\"80vh\">\r\n                <Typography color=\"error\">Quiz not found</Typography>\r\n            </Box>\r\n        );\r\n    }\r\n\r\n    const formatTime = (seconds) => {\r\n        const minutes = Math.floor(seconds / 60);\r\n        const remainingSeconds = seconds % 60;\r\n        return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`;\r\n    };\r\n\r\n    return (\r\n        <Box className={classes.root}>\r\n            <Container maxWidth=\"lg\">\r\n                <Card className={classes.card}>\r\n                    <Box className={classes.header}>\r\n                        <Typography variant=\"h5\" gutterBottom>\r\n                            {quiz.title}\r\n                        </Typography>\r\n                        <Box className={classes.timer}>\r\n                            <TimerIcon />\r\n                            {formatTime(timeLeft)}\r\n                        </Box>\r\n                        <LinearProgress \r\n                            variant=\"determinate\" \r\n                            value={(timeLeft / (quiz.blanks.length * 120)) * 100}\r\n                            className={classes.progress}\r\n                        />\r\n                    </Box>\r\n\r\n                    <CardContent className={classes.content}>\r\n                        {renderQuestionText()}\r\n\r\n                        {quiz.blanks.map((blank, index) => (\r\n                            <Box key={blank.id} mb={4}>\r\n                                <Typography variant=\"subtitle1\" gutterBottom>\r\n                                    Blank {index + 1} Options:\r\n                                </Typography>\r\n                                <Box className={classes.optionsContainer}>\r\n                                    {blank.options.map((option) => (\r\n                                        <Chip\r\n                                            key={option}\r\n                                            label={option}\r\n                                            className={`${classes.optionChip} ${\r\n                                                answers[blank.id] === option ? 'selected' : ''\r\n                                            }`}\r\n                                            onClick={() => handleAnswerChange(blank.id, option)}\r\n                                            clickable\r\n                                        />\r\n                                    ))}\r\n                                </Box>\r\n                                <Divider />\r\n                            </Box>\r\n                        ))}\r\n\r\n                        <Box className={classes.buttonContainer}>\r\n                            <Button\r\n                                variant=\"outlined\"\r\n                                color=\"primary\"\r\n                                className={classes.button}\r\n                                onClick={() => history.push('/')}\r\n                            >\r\n                                Back to List\r\n                            </Button>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                className={`${classes.button} submit`}\r\n                                onClick={handleSubmit}\r\n                                startIcon={<Check />}\r\n                            >\r\n                                Submit Answers\r\n                            </Button>\r\n                        </Box>\r\n                    </CardContent>\r\n                </Card>\r\n            </Container>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default Quiz;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SACIC,SAAS,EACTC,IAAI,EACJC,WAAW,EACXC,UAAU,EACVC,GAAG,EACHC,SAAS,EACTC,MAAM,EACNC,cAAc,EACdC,IAAI,EACJC,UAAU,EACVC,gBAAgB,EAChBC,OAAO,QACJ,mBAAmB;AAC1B,SACIC,KAAK,IAAIC,SAAS,EAClBC,YAAY,EACZC,cAAc,EACdC,KAAK,EACLC,IAAI,IAAIC,QAAQ,QACb,oBAAoB;AAC3B,SAASC,SAAS,EAAEC,UAAU,QAAQ,kBAAkB;AACxD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1B,MAAMC,SAAS,GAAGjB,UAAU,CAAEkB,KAAK,KAAM;EACrCC,IAAI,EAAE;IACFC,SAAS,EAAE,OAAO;IAClBC,eAAe,EAAE,SAAS;IAC1BC,UAAU,EAAEJ,KAAK,CAACK,OAAO,CAAC,CAAC,CAAC;IAC5BC,aAAa,EAAEN,KAAK,CAACK,OAAO,CAAC,CAAC;EAClC,CAAC;EACDE,IAAI,EAAE;IACFC,YAAY,EAAE,EAAE;IAChBC,SAAS,EAAE;EACf,CAAC;EACDC,MAAM,EAAE;IACJC,UAAU,EAAE,kDAAkD;IAC9DC,KAAK,EAAE,OAAO;IACdC,OAAO,EAAEb,KAAK,CAACK,OAAO,CAAC,CAAC,CAAC;IACzBG,YAAY,EAAE;EAClB,CAAC;EACDM,OAAO,EAAE;IACLD,OAAO,EAAEb,KAAK,CAACK,OAAO,CAAC,CAAC;EAC5B,CAAC;EACDU,WAAW,EAAE;IACTC,QAAQ,EAAE,UAAU;IACpBH,OAAO,EAAEb,KAAK,CAACK,OAAO,CAAC,CAAC,CAAC;IACzBF,eAAe,EAAE,MAAM;IACvBK,YAAY,EAAER,KAAK,CAACK,OAAO,CAAC,CAAC,CAAC;IAC9BY,YAAY,EAAEjB,KAAK,CAACK,OAAO,CAAC,CAAC,CAAC;IAC9Ba,QAAQ,EAAE,QAAQ;IAClBC,UAAU,EAAE;EAChB,CAAC;EACDC,UAAU,EAAE;IACRC,OAAO,EAAE,cAAc;IACvBC,KAAK,EAAE,OAAO;IACdC,MAAM,EAAE,OAAO;IACf,0BAA0B,EAAE;MACxBpB,eAAe,EAAE,OAAO;MACxB,kBAAkB,EAAE;QAChBqB,WAAW,EAAE;MACjB,CAAC;MACD,wBAAwB,EAAE;QACtBA,WAAW,EAAE;MACjB;IACJ;EACJ,CAAC;EACDC,KAAK,EAAE;IACHJ,OAAO,EAAE,MAAM;IACfK,UAAU,EAAE,QAAQ;IACpBd,KAAK,EAAE,OAAO;IACdM,QAAQ,EAAE,QAAQ;IAClB,oBAAoB,EAAE;MAClBS,WAAW,EAAE3B,KAAK,CAACK,OAAO,CAAC,CAAC;IAChC;EACJ,CAAC;EACDuB,QAAQ,EAAE;IACNC,MAAM,EAAE,EAAE;IACVrB,YAAY,EAAE,CAAC;IACfL,eAAe,EAAE,0BAA0B;IAC3C,0BAA0B,EAAE;MACxBA,eAAe,EAAE;IACrB,CAAC;IACD2B,SAAS,EAAE9B,KAAK,CAACK,OAAO,CAAC,CAAC;EAC9B,CAAC;EACD0B,gBAAgB,EAAE;IACdf,QAAQ,EAAE,OAAO;IACjBb,eAAe,EAAE,OAAO;IACxBU,OAAO,EAAEb,KAAK,CAACK,OAAO,CAAC,CAAC,CAAC;IACzBG,YAAY,EAAE,KAAK;IACnBC,SAAS,EAAE,2BAA2B;IACtCuB,MAAM,EAAE,IAAI;IACZC,QAAQ,EAAE,OAAO;IACjBC,aAAa,EAAE,MAAM;IACrBb,OAAO,EAAE;EACb,CAAC;EACDc,UAAU,EAAE;IACRtB,OAAO,EAAEb,KAAK,CAACK,OAAO,CAAC,GAAG,CAAC;IAC3B,SAAS,EAAE;MACPF,eAAe,EAAE;IACrB;EACJ,CAAC;EACDiC,UAAU,EAAE;IACRjC,eAAe,EAAE,OAAO;IACxBS,KAAK,EAAE,SAAS;IAChB,SAAS,EAAE;MACPT,eAAe,EAAE;IACrB,CAAC;IACD,YAAY,EAAE;MACVA,eAAe,EAAE,SAAS;MAC1BS,KAAK,EAAE;IACX;EACJ,CAAC;EACDyB,eAAe,EAAE;IACbhB,OAAO,EAAE,MAAM;IACfiB,cAAc,EAAE,eAAe;IAC/BR,SAAS,EAAE9B,KAAK,CAACK,OAAO,CAAC,CAAC;EAC9B,CAAC;EACDkC,MAAM,EAAE;IACJ1B,OAAO,EAAE,WAAW;IACpBL,YAAY,EAAE,EAAE;IAChB,UAAU,EAAE;MACRG,UAAU,EAAE,kDAAkD;MAC9DC,KAAK,EAAE;IACX;EACJ;AACJ,CAAC,CAAC,CAAC;AAEH,MAAM4B,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACf,MAAMC,OAAO,GAAG3C,SAAS,CAAC,CAAC;EAC3B,MAAM;IAAE4C;EAAG,CAAC,GAAGnD,SAAS,CAAC,CAAC;EAC1B,MAAMoD,OAAO,GAAGnD,UAAU,CAAC,CAAC;EAC5B,MAAM,CAACoD,IAAI,EAAEC,OAAO,CAAC,GAAG3E,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAAC4E,OAAO,EAAEC,UAAU,CAAC,GAAG7E,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC1C,MAAM,CAAC8E,OAAO,EAAEC,UAAU,CAAC,GAAG/E,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACgF,QAAQ,EAAEC,WAAW,CAAC,GAAGjF,QAAQ,CAAC,CAAC,CAAC;EAC3C,MAAM,CAACkF,aAAa,EAAEC,gBAAgB,CAAC,GAAGnF,QAAQ,CAAC;IAAEoF,CAAC,EAAE,CAAC;IAAEC,CAAC,EAAE;EAAE,CAAC,CAAC;EAClE,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGvF,QAAQ,CAAC,IAAI,CAAC;EAExDC,SAAS,CAAC,MAAM;IACZ,MAAMuF,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMlE,KAAK,CAACmE,GAAG,CAAC,uCAAuClB,EAAE,EAAE,CAAC;QAC7EG,OAAO,CAACc,QAAQ,CAACE,IAAI,CAAC;QACtBV,WAAW,CAACQ,QAAQ,CAACE,IAAI,CAACC,MAAM,CAACC,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC;QAChDd,UAAU,CAAC,KAAK,CAAC;MACrB,CAAC,CAAC,OAAOe,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;QAC5Cf,UAAU,CAAC,KAAK,CAAC;MACrB;IACJ,CAAC;IACDS,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,CAAChB,EAAE,CAAC,CAAC;EAERvE,SAAS,CAAC,MAAM;IACZ,IAAI+E,QAAQ,IAAI,CAAC,EAAE;IAEnB,MAAM1B,KAAK,GAAG0C,WAAW,CAAC,MAAM;MAC5Bf,WAAW,CAACgB,IAAI,IAAIA,IAAI,GAAG,CAAC,CAAC;IACjC,CAAC,EAAE,IAAI,CAAC;IAER,OAAO,MAAMC,aAAa,CAAC5C,KAAK,CAAC;EACrC,CAAC,EAAE,CAAC0B,QAAQ,CAAC,CAAC;EAEd,MAAMmB,kBAAkB,GAAGA,CAACC,OAAO,EAAEC,KAAK,KAAK;IAC3CxB,UAAU,CAACoB,IAAI,KAAK;MAChB,GAAGA,IAAI;MACP,CAACG,OAAO,GAAGC;IACf,CAAC,CAAC,CAAC;EACP,CAAC;EAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACvB,MAAMC,OAAO,GAAG;MACZ7B,IAAI,EAAEA,IAAI;MACVE,OAAO,EAAEA,OAAO;MAChB4B,SAAS,EAAE9B,IAAI,CAACkB,MAAM,CAACC,MAAM,GAAG,GAAG,GAAGb;IAC1C,CAAC;IACDP,OAAO,CAACgC,IAAI,CAAC,SAAS,EAAE;MAAEF;IAAQ,CAAC,CAAC;EACxC,CAAC;EAED,MAAMG,eAAe,GAAIC,CAAC,IAAK;IAC3BxB,gBAAgB,CAAC;MACbC,CAAC,EAAEuB,CAAC,CAACC,OAAO,GAAG,EAAE;MACjBvB,CAAC,EAAEsB,CAAC,CAACE,OAAO,GAAG;IACnB,CAAC,CAAC;EACN,CAAC;EAED,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;IAAA,IAAAC,iBAAA;IAC7B,oBACItF,OAAA,CAAAE,SAAA;MAAAqF,QAAA,gBACIvF,OAAA;QAAKwF,SAAS,EAAE1C,OAAO,CAAC3B,WAAY;QAAAoE,QAAA,EAC/BtC,IAAI,CAACwC,aAAa,CAACC,KAAK,CAAC,MAAM,CAAC,CAACC,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,EAAEC,KAAK,kBACrD9F,OAAA,CAAC1B,KAAK,CAAC2B,QAAQ;UAAAsF,QAAA,GACVK,IAAI,EACJC,KAAK,GAAGC,KAAK,CAAC1B,MAAM,GAAG,CAAC,iBACrBpE,OAAA,CAAClB,SAAS;YACN8F,KAAK,EAAEzB,OAAO,CAACF,IAAI,CAACkB,MAAM,CAAC0B,KAAK,CAAC,CAAC9C,EAAE,CAAC,IAAI,EAAG;YAC5CyC,SAAS,EAAE1C,OAAO,CAACiD,UAAW;YAC9BC,OAAO,EAAC,UAAU;YAClBC,IAAI,EAAC,OAAO;YACZC,QAAQ;YACRC,YAAY,EAAEA,CAAA,KAAMrC,gBAAgB,CAACb,IAAI,CAACkB,MAAM,CAAC0B,KAAK,CAAC,CAAC9C,EAAE,CAAE;YAC5DqD,YAAY,EAAEA,CAAA,KAAMtC,gBAAgB,CAAC,IAAI;UAAE;YAAAuC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC9C,CACJ;QAAA,GAZgBX,KAAK;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAaV,CACnB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eAENxG,OAAA;QACIwF,SAAS,EAAE1C,OAAO,CAACX,gBAAiB;QACpCsE,KAAK,EAAE;UACHhF,OAAO,EAAEoC,aAAa,GAAG,OAAO,GAAG,MAAM;UACzC6C,IAAI,EAAEjD,aAAa,CAACE,CAAC;UACrBgD,GAAG,EAAElD,aAAa,CAACG;QACvB,CAAE;QAAA2B,QAAA,EAED1B,aAAa,MAAAyB,iBAAA,GAAIrC,IAAI,CAACkB,MAAM,CAACyC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAAC9D,EAAE,KAAKc,aAAa,CAAC,cAAAyB,iBAAA,uBAA7CA,iBAAA,CAA+CwB,OAAO,CAACnB,GAAG,CAAC,CAACoB,MAAM,EAAElB,KAAK,kBACvF7F,OAAA;UAAiBwF,SAAS,EAAE1C,OAAO,CAACP,UAAW;UAAAgD,QAAA,EAC1CwB;QAAM,GADDlB,KAAK;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEV,CACR,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC;IAAA,eACR,CAAC;EAEX,CAAC;EAEDhI,SAAS,CAAC,MAAM;IACZwI,QAAQ,CAACC,gBAAgB,CAAC,WAAW,EAAEhC,eAAe,CAAC;IACvD,OAAO,MAAM;MACT+B,QAAQ,CAACE,mBAAmB,CAAC,WAAW,EAAEjC,eAAe,CAAC;IAC9D,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,IAAI5B,OAAO,EAAE;IACT,oBACIrD,OAAA,CAACnB,GAAG;MAAC4C,OAAO,EAAC,MAAM;MAACiB,cAAc,EAAC,QAAQ;MAACZ,UAAU,EAAC,QAAQ;MAACxB,SAAS,EAAC,MAAM;MAAAiF,QAAA,eAC5EvF,OAAA,CAACb,gBAAgB;QAACsH,KAAK,EAAE;UAAEzF,KAAK,EAAE;QAAU;MAAE;QAAAqF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC;EAEd;EAEA,IAAI,CAACvD,IAAI,EAAE;IACP,oBACIjD,OAAA,CAACnB,GAAG;MAAC4C,OAAO,EAAC,MAAM;MAACiB,cAAc,EAAC,QAAQ;MAACZ,UAAU,EAAC,QAAQ;MAACxB,SAAS,EAAC,MAAM;MAAAiF,QAAA,eAC5EvF,OAAA,CAACpB,UAAU;QAACoC,KAAK,EAAC,OAAO;QAAAuE,QAAA,EAAC;MAAc;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpD,CAAC;EAEd;EAEA,MAAMW,UAAU,GAAIC,OAAO,IAAK;IAC5B,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACH,OAAO,GAAG,EAAE,CAAC;IACxC,MAAMI,gBAAgB,GAAGJ,OAAO,GAAG,EAAE;IACrC,OAAO,GAAGC,OAAO,IAAIG,gBAAgB,CAACC,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE;EACvE,CAAC;EAED,oBACI1H,OAAA,CAACnB,GAAG;IAAC2G,SAAS,EAAE1C,OAAO,CAACzC,IAAK;IAAAkF,QAAA,eACzBvF,OAAA,CAACvB,SAAS;MAACkJ,QAAQ,EAAC,IAAI;MAAApC,QAAA,eACpBvF,OAAA,CAACtB,IAAI;QAAC8G,SAAS,EAAE1C,OAAO,CAACnC,IAAK;QAAA4E,QAAA,gBAC1BvF,OAAA,CAACnB,GAAG;UAAC2G,SAAS,EAAE1C,OAAO,CAAChC,MAAO;UAAAyE,QAAA,gBAC3BvF,OAAA,CAACpB,UAAU;YAACoH,OAAO,EAAC,IAAI;YAAC4B,YAAY;YAAArC,QAAA,EAChCtC,IAAI,CAAC4E;UAAK;YAAAxB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eACbxG,OAAA,CAACnB,GAAG;YAAC2G,SAAS,EAAE1C,OAAO,CAACjB,KAAM;YAAA0D,QAAA,gBAC1BvF,OAAA,CAACV,SAAS;cAAA+G,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,EACZW,UAAU,CAAC5D,QAAQ,CAAC;UAAA;YAAA8C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpB,CAAC,eACNxG,OAAA,CAAChB,cAAc;YACXgH,OAAO,EAAC,aAAa;YACrBpB,KAAK,EAAGrB,QAAQ,IAAIN,IAAI,CAACkB,MAAM,CAACC,MAAM,GAAG,GAAG,CAAC,GAAI,GAAI;YACrDoB,SAAS,EAAE1C,OAAO,CAACd;UAAS;YAAAqE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/B,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC,eAENxG,OAAA,CAACrB,WAAW;UAAC6G,SAAS,EAAE1C,OAAO,CAAC5B,OAAQ;UAAAqE,QAAA,GACnCF,kBAAkB,CAAC,CAAC,EAEpBpC,IAAI,CAACkB,MAAM,CAACwB,GAAG,CAAC,CAACmC,KAAK,EAAEjC,KAAK,kBAC1B7F,OAAA,CAACnB,GAAG;YAAgBkJ,EAAE,EAAE,CAAE;YAAAxC,QAAA,gBACtBvF,OAAA,CAACpB,UAAU;cAACoH,OAAO,EAAC,WAAW;cAAC4B,YAAY;cAAArC,QAAA,GAAC,QACnC,EAACM,KAAK,GAAG,CAAC,EAAC,WACrB;YAAA;cAAAQ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eACbxG,OAAA,CAACnB,GAAG;cAAC2G,SAAS,EAAE1C,OAAO,CAACX,gBAAiB;cAAAoD,QAAA,EACpCuC,KAAK,CAAChB,OAAO,CAACnB,GAAG,CAAEoB,MAAM,iBACtB/G,OAAA,CAACf,IAAI;gBAED+I,KAAK,EAAEjB,MAAO;gBACdvB,SAAS,EAAE,GAAG1C,OAAO,CAACN,UAAU,IAC5BW,OAAO,CAAC2E,KAAK,CAAC/E,EAAE,CAAC,KAAKgE,MAAM,GAAG,UAAU,GAAG,EAAE,EAC/C;gBACHkB,OAAO,EAAEA,CAAA,KAAMvD,kBAAkB,CAACoD,KAAK,CAAC/E,EAAE,EAAEgE,MAAM,CAAE;gBACpDmB,SAAS;cAAA,GANJnB,MAAM;gBAAAV,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAOd,CACJ;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACD,CAAC,eACNxG,OAAA,CAACZ,OAAO;cAAAiH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC;UAAA,GAjBLsB,KAAK,CAAC/E,EAAE;YAAAsD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAkBb,CACR,CAAC,eAEFxG,OAAA,CAACnB,GAAG;YAAC2G,SAAS,EAAE1C,OAAO,CAACL,eAAgB;YAAA8C,QAAA,gBACpCvF,OAAA,CAACjB,MAAM;cACHiH,OAAO,EAAC,UAAU;cAClBhF,KAAK,EAAC,SAAS;cACfwE,SAAS,EAAE1C,OAAO,CAACH,MAAO;cAC1BsF,OAAO,EAAEA,CAAA,KAAMjF,OAAO,CAACgC,IAAI,CAAC,GAAG,CAAE;cAAAO,QAAA,EACpC;YAED;cAAAc,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACTxG,OAAA,CAACjB,MAAM;cACHiH,OAAO,EAAC,WAAW;cACnBR,SAAS,EAAE,GAAG1C,OAAO,CAACH,MAAM,SAAU;cACtCsF,OAAO,EAAEpD,YAAa;cACtBsD,SAAS,eAAEnI,OAAA,CAACP,KAAK;gBAAA4G,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAE;cAAAjB,QAAA,EACxB;YAED;cAAAc,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACR,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACZ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACX,CAAC;AAEd,CAAC;AAAC3D,EAAA,CAnMID,IAAI;EAAA,QACUzC,SAAS,EACVP,SAAS,EACRC,UAAU;AAAA;AAAAuI,EAAA,GAHxBxF,IAAI;AAqMV,eAAeA,IAAI;AAAC,IAAAwF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}